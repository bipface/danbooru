name: Github

# Trigger on pushes to master or pull requests to master, but not both.
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  test:
    runs-on: ubuntu-latest
    container: ubuntu:20.10

    defaults:
      run:
        shell: bash

    env:
      DEBIAN_FRONTEND: noninteractive
      PARALLEL_WORKERS: 8 # number of parallel tests to run
      RUBYOPT: -W0 # silence ruby warnings
      VIPS_WARNING: 0 # silence libvips warnings

      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      DATABASE_URL: postgresql://danbooru:danbooru@postgres/danbooru
      ARCHIVE_DATABASE_URL: postgresql://danbooru:danbooru@postgres/danbooru
      DANBOORU_SECRET_KEY_BASE: 1234
      DANBOORU_AWS_SQS_ENABLED: false
      DANBOORU_TWITTER_API_KEY: ${{ secrets.DANBOORU_TWITTER_API_KEY }}
      DANBOORU_TWITTER_API_SECRET: ${{ secrets.DANBOORU_TWITTER_API_SECRET }}
      DANBOORU_PIXIV_LOGIN: ${{ secrets.DANBOORU_PIXIV_LOGIN }}
      DANBOORU_PIXIV_PASSWORD: ${{ secrets.DANBOORU_PIXIV_PASSWORD }}
      DANBOORU_NIJIE_LOGIN: ${{ secrets.DANBOORU_NIJIE_LOGIN }}
      DANBOORU_NIJIE_PASSWORD: ${{ secrets.DANBOORU_NIJIE_PASSWORD }}
      DANBOORU_NICO_SEIGA_LOGIN: ${{ secrets.DANBOORU_NICO_SEIGA_LOGIN }}
      DANBOORU_NICO_SEIGA_PASSWORD: ${{ secrets.DANBOORU_NICO_SEIGA_PASSWORD }}
      DANBOORU_TUMBLR_CONSUMER_KEY: ${{ secrets.DANBOORU_TUMBLR_CONSUMER_KEY }}
      DANBOORU_DEVIANTART_CLIENT_ID: ${{ secrets.DANBOORU_DEVIANTART_CLIENT_ID }}
      DANBOORU_DEVIANTART_CLIENT_SECRET: ${{ secrets.DANBOORU_DEVIANTART_CLIENT_SECRET }}
      DANBOORU_PAWOO_CLIENT_ID: ${{ secrets.DANBOORU_PAWOO_CLIENT_ID }}
      DANBOORU_PAWOO_CLIENT_SECRET: ${{ secrets.DANBOORU_PAWOO_CLIENT_SECRET }}
      DANBOORU_RAKISMET_KEY: ${{ secrets.DANBOORU_RAKISMET_KEY }}
      DANBOORU_RAKISMET_URL: ${{ secrets.DANBOORU_RAKISMET_URL }}
      DANBOORU_IP_REGISTRY_API_KEY: ${{ secrets.DANBOORU_IP_REGISTRY_API_KEY }}
      DANBOORU_STRIPE_SECRET_KEY: ${{ secrets.DANBOORU_STRIPE_SECRET_KEY }}
      DANBOORU_STRIPE_PUBLISHABLE_KEY: ${{ secrets.DANBOORU_STRIPE_PUBLISHABLE_KEY }}
      DANBOORU_STRIPE_WEBHOOK_SECRET: ${{ secrets.DANBOORU_STRIPE_WEBHOOK_SECRET }}
      DANBOORU_STRIPE_GOLD_USD_PRICE_ID: ${{ secrets.DANBOORU_STRIPE_GOLD_USD_PRICE_ID }}
      DANBOORU_STRIPE_GOLD_EUR_PRICE_ID: ${{ secrets.DANBOORU_STRIPE_GOLD_EUR_PRICE_ID }}
      DANBOORU_STRIPE_PLATINUM_USD_PRICE_ID: ${{ secrets.DANBOORU_STRIPE_PLATINUM_USD_PRICE_ID }}
      DANBOORU_STRIPE_PLATINUM_EUR_PRICE_ID: ${{ secrets.DANBOORU_STRIPE_PLATINUM_EUR_PRICE_ID }}
      DANBOORU_STRIPE_GOLD_TO_PLATINUM_USD_PRICE_ID: ${{ secrets.DANBOORU_STRIPE_GOLD_TO_PLATINUM_USD_PRICE_ID }}
      DANBOORU_STRIPE_GOLD_TO_PLATINUM_EUR_PRICE_ID: ${{ secrets.DANBOORU_STRIPE_GOLD_TO_PLATINUM_EUR_PRICE_ID }}

    services:
      postgres:
        image: evazion/postgres
        env:
          POSTGRES_USER: danbooru
          POSTGRES_PASSWORD: danbooru

    steps:
    - name: Install OS dependencies
      run: |
        apt-get update
        apt-get -y install --no-install-recommends build-essential ruby ruby-dev ruby-bundler git nodejs yarnpkg webpack ffmpeg mkvtoolnix libvips-dev libxml2-dev libxslt-dev zlib1g-dev postgresql-server-dev-all wget curl git
        ln -sf /usr/bin/yarnpkg /usr/bin/yarn

    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Ruby dependencies
      run: BUNDLE_DEPLOYMENT=true bundle install --jobs 4

    - name: Install Javascript dependencies
      run: yarn install

    - name: Prepare database
      run: config/docker/prepare-tests.sh

    - name: Run tests
      run: bin/rails test

    - name: Create HTML test report
      if: success() || failure()
      run: |
        yarn add xunit-viewer
        node_modules/xunit-viewer/bin/xunit-viewer -r test/reports -o test/reports/index.html

    - name: Archive test report
      if: success() || failure()
      uses: actions/upload-artifact@v2
      with:
        name: test-report
        path: test/reports/
